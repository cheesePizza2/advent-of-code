(ql:quickload :cl-ppcre)

(defvar *rega* 0)
(defvar *regb* 0)
(defvar *regc* 0)

(defun parse-file (file)
  (let ((vals (ppcre:all-matches-as-strings "(\\d)+" (uiop:read-file-string file))))
    (setf *rega* (parse-integer (first vals)) *regb* (parse-integer (second vals)) *regc* (parse-integer (third vals)))
    (mapcar #'parse-integer (cdddr vals))))

(defun combo-op (op)
  (case op
    ((0 1 2 3) op)
    (4 *rega*)
    (5 *regb*)
    (6 *regc*)))

(defun part1 (file)
  (let ((pr (parse-file file))
        (pointer 0)
        (skip 0))
    (loop while (< pointer (length pr))
          do (case (nth pointer pr)
               (0 (setf *rega* (floor (/ *rega* (expt 2 (combo-op (nth (1+ pointer) pr)))))))
               (1 (setf *regb* (logxor *regb* (nth (1+ pointer) pr))))
               (2 (setf *regb* (mod (combo-op (nth (1+ pointer) pr)) 8)))
               (3 (unless (zerop *rega*) (setf pointer (nth (1+ pointer) pr) skip 1)))
               (4 (setf *regb* (logxor *regb* *regc*)))
               (5 (format t "~D," (mod (combo-op (nth (1+ pointer) pr)) 8)))
               (6 (setf *regb* (floor (/ *rega* (expt 2 (combo-op (nth (1+ pointer) pr)))))))
               (7 (setf *regc* (floor (/ *rega* (expt 2 (combo-op (nth (1+ pointer) pr))))))))
          if (zerop skip) do (setf pointer (+ pointer 2)) else do (setf skip 0))
    (format t "~&")))

(defun collect-vals (pr rega)
  (setf *rega* rega)
  (let ((pointer 0)
        (skip 0))
    (loop while (< pointer (length pr))
          if (equal (nth pointer pr) 5) collect (mod (combo-op (nth (1+ pointer) pr)) 8)
          do (case (nth pointer pr)
               (0 (setf *rega* (floor (/ *rega* (expt 2 (combo-op (nth (1+ pointer) pr)))))))
               (1 (setf *regb* (logxor *regb* (nth (1+ pointer) pr))))
               (2 (setf *regb* (mod (combo-op (nth (1+ pointer) pr)) 8)))
               (3 (unless (zerop *rega*) (setf pointer (nth (1+ pointer) pr) skip 1)))
               (4 (setf *regb* (logxor *regb* *regc*)))
               (6 (setf *regb* (floor (/ *rega* (expt 2 (combo-op (nth (1+ pointer) pr)))))))
               (7 (setf *regc* (floor (/ *rega* (expt 2 (combo-op (nth (1+ pointer) pr))))))))
          if (zerop skip) do (setf pointer (+ pointer 2)) else do (setf skip 0))))
